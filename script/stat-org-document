#!perl

# DATE
# VERSION

use 5.010;
use strict;
use warnings;
use open qw(:std :utf8);
use Log::ger;

use List::Util qw(sum);
use Org::Parser;

my $input = [<>];
close STDIN; close ARGV; # so perl doesn't add ", <> line xx" upon dying

my $doc = Org::Parser->new->parse($input);

my %stats = (
    num_objects => 0,
    input_size_in_lines      => ~~@$input,
    input_size_in_characters => sum(map {length} @$input),
    tree_depth => 0,
);

$doc->walk(
    sub {
        my ($el, $level) = @_;
        $stats{num_objects}++;

        $stats{"num_objects_at_level_$level"}++;
        $stats{tree_depth} = $level if $stats{tree_depth} < $level;

        my $cl = ref($el); $cl =~ s/^Org::Element:://;
        $stats{"num_objects_of_type_${cl}"}++;
        if ($cl eq 'Headline') {
            $stats{num_headlines}++;
            my $level = $el->level;
            $stats{"num_headlines_level_$level"}++;
            if ($el->is_todo) {
                $stats{num_todos}++;
                if ($el->is_done) {
                    $stats{num_todos_that_are_done}++;
                } else {
                    $stats{num_todos_that_are_undone}++;
                }
            }
        }
    }
);

for (sort keys %stats) {
    print "$_\t$stats{$_}\n";
}

1;
# ABSTRACT: Print statistics of an Org document
# PODNAME:

=head1 SYNOPSIS

 % stat-org-document   foo.org
 % stat-org-document < foo.org


=head1 DESCRIPTION

This script prints some statistics of an Org document.


=head1 SEE ALSO

L<Org::Parser>

L<dump-org-structure>

=cut
